{"version":3,"file":"static/js/225.018c0ca9.chunk.js","mappings":"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","sources":["common/components/Inputs/styles.ts","common/components/Inputs/Input.tsx","../node_modules/@styled-icons/material/VisibilityOff/VisibilityOff.esm.js","../node_modules/@styled-icons/material/Visibility/Visibility.esm.js","common/components/Inputs/PasswordInput/PasswordInput.tsx","features/Modals/ModalsStyledComponents.ts","features/authPages/register/Register.tsx","utils/DataUtils/handleStringsUtils.ts","utils/YupValidators/Validators.ts"],"sourcesContent":["import styled, {css} from \"styled-components\";\r\nimport {antoColor, secondColor} from \"assets/stylesheets/colors\";\r\n\r\nexport const SErrorMessage = styled.span`\r\n    color: #FF0000FF\r\n`\r\nconst gray = '#9b9b9b';\r\nconst red = '#f34141'\r\nconst opacityRed = 'rgba(243,65,65,0.36)'\r\n\r\n\r\nconst SSameLabelStyle = css`\r\n    font-size: 1rem;\r\n    top: 0;\r\n    left: 0;\r\n    line-height: 10px;\r\n`\r\n\r\nexport const SInput = styled.div<{ error?: string, disabled?: boolean }>`\r\n    position: relative;\r\n    padding: 15px 0 20px;\r\n    margin-top: 10px;\r\n    width: 100%;\r\n\r\n    input {\r\n        font-family: inherit;\r\n        width: 100%;\r\n        border: 0;\r\n        border-bottom: 2px solid ${({error}) => error ? red : gray};\r\n        outline: 0;\r\n        font-size: 1.3rem;\r\n        color: ${antoColor};\r\n        padding: 7px 0;\r\n        background: transparent;\r\n        transition: border-color 0.2s;\r\n        position: relative;\r\n        z-index: 1;\r\n        &:hover {\r\n            border-color: ${({error}) => error ? opacityRed : \"black\"};\r\n            &:disabled {\r\n                border-color: ${({error}) => error ? red : gray};\r\n            }\r\n        }\r\n\r\n        &::placeholder{\r\n            color: transparent;\r\n        }\r\n        &:placeholder-shown  {\r\n            ~ label {\r\n                font-size: 1.3rem;\r\n                line-height: 10px;\r\n                top: 30px;\r\n                left: 0;\r\n            }\r\n        }\r\n\r\n        &:focus {\r\n            ~ label {\r\n                ${SSameLabelStyle};\r\n                color: ${secondColor};\r\n            }\r\n            padding-bottom: 6px;\r\n            font-weight: 600;\r\n            border-width: 3px;\r\n            border-color: ${secondColor};\r\n        }\r\n        &:-webkit-autofill,\r\n        &:-webkit-autofill:hover,\r\n        &:-webkit-autofill:focus,\r\n        &:-webkit-autofill:active {\r\n            transition: all 5000s ease-in-out 0s;\r\n            ~ label {\r\n                ${SSameLabelStyle};\r\n            }\r\n        }\r\n    }\r\n    label {\r\n        z-index: 0;\r\n        ${SSameLabelStyle};\r\n        position: absolute;\r\n        transition: 0.2s;\r\n        color: ${({error}) => error ? red : gray};\r\n        font-weight: 700;\r\n    }\r\n`\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, memo, RefObject} from 'react'\r\nimport {UseFormRegister} from \"react-hook-form\";\r\nimport {SHelperText} from \"../CommonStyledComponents\";\r\nimport {SErrorMessage, SInput} from \"common/components/Inputs/styles\";\r\nimport {camelize} from \"utils/DataUtils/handleStringsUtils\";\r\n\r\n\r\ntype DefaultInputPT = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\nexport type InputPT = Omit<DefaultInputPT, \"ref\"> & {\r\n    error?: string\r\n    helperText?: string\r\n    register?: UseFormRegister<any>\r\n    registerFieldName?: string;\r\n    ref?: ((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | null\r\n}\r\n/**\r\n * Input - App input type text || props.type with custom styles\r\n * @props register - react-hook-form register\r\n * @props registerFieldName - react-hook-form registerFieldName\r\n * registerFieldName || camelize(placeholder)\r\n */\r\nexport const Input = memo(\r\n    ({\r\n         placeholder,\r\n         registerFieldName,\r\n         register,\r\n         type,\r\n         children,\r\n         error,\r\n         helperText,\r\n         className,\r\n         ...restProps\r\n     }: InputPT) => {\r\n        return (\r\n            <SInput\r\n                error={error}\r\n                className={className}>\r\n                <input\r\n                    type={type || \"text\"}\r\n                    placeholder={placeholder}\r\n                    {...restProps}\r\n                    {...register && {\r\n                        ...register(registerFieldName\r\n                            || (placeholder && camelize(placeholder))\r\n                            || \"\"\r\n                        )\r\n                    }}\r\n                />\r\n                {placeholder && <label>\r\n                    {placeholder}\r\n                </label>\r\n                }\r\n                {error && <SErrorMessage>{error}</SErrorMessage>}\r\n                {helperText && <SHelperText>{helperText}</SHelperText>}\r\n                {children}\r\n            </SInput>\r\n        )\r\n    }\r\n)\r\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var VisibilityOff = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46A11.804 11.804 0 0 0 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n  }));\n});\nVisibilityOff.displayName = 'VisibilityOff';\nexport var VisibilityOffDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Visibility = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n  }));\n});\nVisibility.displayName = 'Visibility';\nexport var VisibilityDimensions = {\n  height: 24,\n  width: 24\n};","import React, {useState} from 'react';\r\nimport {Input, InputPT} from \"common/components/Inputs/Input\";\r\nimport {Visibility, VisibilityOff} from \"@styled-icons/material\";\r\nimport {SDopInputControl} from \"common/components/CommonStyledComponents\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const PasswordInput =\r\n    ({\r\n         type,\r\n         ...props\r\n     }: InputPT) => {\r\n        const [seeMode, setSeeMode] = useState(false)\r\n        const eyeHandle = (e: React.MouseEvent<HTMLDivElement>) => {\r\n            e.preventDefault()\r\n            setSeeMode(!seeMode)\r\n        };\r\n        return (\r\n            <Input\r\n                type={seeMode ?  \"\" : \"password\"}\r\n                {...props}>\r\n                <SEye\r\n                    onClick={eyeHandle}>\r\n                    {seeMode\r\n                        ? <VisibilityOff/>\r\n                        : <Visibility/>\r\n                    }\r\n                </SEye>\r\n            </Input>\r\n        );\r\n    };\r\nconst SEye = styled(SDopInputControl)`\r\n    top: 19px;\r\n    right: 15px;\r\n`","import styled from \"styled-components\";\r\nimport {SInputsSection, SPagesContainer} from \"common/components/CommonStyledComponents\";\r\nimport {secondColor} from \"assets/stylesheets/colors\";\r\n\r\nexport const SModal = styled.div`\r\n    display: grid;\r\n`\r\nexport const SModalContent = styled(SPagesContainer)`\r\n    display: grid;\r\n    max-height: 100vh;\r\n    height:auto;\r\n    min-height: 30vh;\r\n    box-shadow: 0 0 1vh ${secondColor};\r\n    background: white;\r\n    border-radius: 3px;\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-right: -50%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 21;\r\n`\r\nexport const SModalRelativeBlock = styled.div`\r\n    z-index: 20;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    position: relative;\r\n`\r\nexport const SModalBackground = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: black;\r\n    opacity: 0.35;\r\n    z-index: 20;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n`\r\nexport const SModalControlSection = styled.div`\r\n    display: grid;\r\n    justify-content: space-between;\r\n    align-self: end;\r\n    grid-template-columns:repeat(2, 150px);\r\n    padding: 2vh 0;\r\n    button{\r\n       width:100%\r\n    }\r\n`\r\nexport const SModalInputsSection = styled(SInputsSection)`\r\n    justify-items: unset;\r\n`","import React from 'react';\r\nimport {Input} from \"common/components/Inputs/Input\";\r\nimport {Button} from \"common/components/Button/Button\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {PATH} from \"common/components/Routes/AppRoutes\";\r\nimport {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport {useRegisterMutation} from \"../authApi\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport {RegisterSchema} from \"utils/YupValidators/Validators\";\r\nimport {SForm, SInputsSection, SPagesContainer, STitle} from \"common/components/CommonStyledComponents\";\r\nimport {SModalControlSection} from \"features/Modals/ModalsStyledComponents\";\r\nimport {PasswordInput} from \"common/components/Inputs/PasswordInput/PasswordInput\";\r\n\r\ntype RegisterFormValues = {\r\n    email: string\r\n    password: string\r\n    confirmPassword: string\r\n}\r\nexport default function Register() {\r\n    const navigate = useNavigate()\r\n    const {register, handleSubmit, formState: {errors}} = useForm<RegisterFormValues>({\r\n        resolver: yupResolver(RegisterSchema)\r\n    })\r\n    const [getRegister, {isSuccess, isLoading}] = useRegisterMutation()\r\n\r\n    const cancelButtonHandler = () => {\r\n        navigate(PATH.login);\r\n    }\r\n    const onSubmit: SubmitHandler<RegisterFormValues> = async (data) => {\r\n        const {email, password} = data\r\n        await getRegister({email, password})\r\n    }\r\n\r\n    if (isSuccess) {\r\n        navigate(PATH.login);\r\n    }\r\n\r\n    return (\r\n        <SPagesContainer>\r\n            <SForm onSubmit={handleSubmit(onSubmit)}>\r\n                <STitle>Sing Up</STitle>\r\n                <SInputsSection>\r\n                    <Input\r\n                        placeholder={\"Email\"}\r\n                        disabled={isLoading}\r\n                        error={errors.email?.message}\r\n                        register={register}/>\r\n                    <PasswordInput\r\n                        placeholder={\"Password\"}\r\n                        disabled={isLoading}\r\n                        error={errors.password?.message}\r\n                        register={register}/>\r\n                    <PasswordInput\r\n                        placeholder={\"Confirm password\"}\r\n                        disabled={isLoading}\r\n                        error={errors.confirmPassword?.message}\r\n                        register={register}/>\r\n                </SInputsSection>\r\n                <SModalControlSection>\r\n                    <Button gray\r\n                            onClick={cancelButtonHandler}\r\n                            type={\"button\"}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        type={\"submit\"}>\r\n                        Register\r\n                    </Button>\r\n                </SModalControlSection>\r\n            </SForm>\r\n        </SPagesContainer>\r\n\r\n    );\r\n};\r\n","export const camelize = (s: string) => {\r\n    return s.toLowerCase()\r\n        .replace(/\\W+(.)/g, (match, chr) => chr.toUpperCase())\r\n}","import * as yup from \"yup\"\r\n\r\nconst email = {\r\n    email: yup.string().email().required(\"Email is a required field\")\r\n}\r\nconst password = {\r\n    password: yup.string().min(7).max(20).required(\"Password is a required field\")\r\n}\r\nexport const CreateAndEditPackSchema = yup\r\n    .object({\r\n        name: yup.string().min(3).max(30).required(),\r\n        private:yup.boolean().optional(),\r\n    })\r\nexport const CreateAndEditCardSchema = yup\r\n    .object({\r\n        question: yup.string().optional(),\r\n        questionImg: yup.string().optional(),\r\n        answer: yup.string().optional(),\r\n        answerImg: yup.string().optional(),\r\n    })\r\nexport const RegisterSchema = yup\r\n    .object({\r\n        ...email,\r\n        ...password,\r\n        confirmPassword: yup.string().oneOf([yup.ref(\"password\")], \"Passwords does not match\").required(`Confirm your password`)\r\n    })\r\n    .required()\r\nexport const LoginSchema = yup\r\n    .object({\r\n        ...email,\r\n        ...password,\r\n        rememberMe: yup.boolean().default(false)\r\n    })\r\n    .required()\r\nexport const EmailSchema = yup\r\n    .object({\r\n        ...email,\r\n    })\r\n    .required()\r\nexport const PasswordSchema = yup\r\n    .object({\r\n        ...password,\r\n    })\r\n    .required()\r\nexport const NameSchema = yup\r\n    .object({\r\n        name: yup.string().min(1,\"Name can't be empty\").optional(),\r\n        avatar: yup.string().optional()\r\n    })"],"names":["SErrorMessage","styled","span","_templateObject","_taggedTemplateLiteral","gray","red","SSameLabelStyle","css","_templateObject2","SInput","div","_templateObject3","_ref","error","antoColor","_ref2","_ref3","secondColor","_ref4","Input","memo","placeholder","registerFieldName","register","type","children","helperText","className","restProps","_jsxs","_jsx","camelize","SHelperText","VisibilityOff","React","props","ref","StyledIconBase","_extends","iconAttrs","iconVerticalAlign","iconViewBox","d","displayName","Visibility","PasswordInput","seeMode","setSeeMode","useState","SEye","onClick","e","preventDefault","SDopInputControl","SModalContent","SPagesContainer","SModalBackground","_templateObject4","SModalControlSection","_templateObject5","SModalInputsSection","SInputsSection","_templateObject6","Register","_errors$email","_errors$password","_errors$confirmPasswo","navigate","useNavigate","handleSubmit","formState","errors","useForm","resolver","yupResolver","RegisterSchema","getRegister","isSuccess","isLoading","useRegisterMutation","PATH","login","SForm","onSubmit","async","email","password","data","STitle","disabled","message","confirmPassword","Button","cancelButtonHandler","s","toLowerCase","replace","match","chr","toUpperCase","yup","required","min","max","CreateAndEditPackSchema","name","private","optional","CreateAndEditCardSchema","question","questionImg","answer","answerImg","oneOf","LoginSchema","rememberMe","default","EmailSchema","PasswordSchema","NameSchema","avatar"],"sourceRoot":""}